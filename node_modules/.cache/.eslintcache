[{"/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/index.js":"1","/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/App.js":"2","/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/reportWebVitals.js":"3","/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Pages/MainPage.js":"4","/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Pages/LoginPage.js":"5","/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Components/Topbar/topbar.js":"6","/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Components/Questionbox/questionbox.js":"7","/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Components/Recommendquestion/recommendquestion.js":"8","/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Pages/PreviewPage.js":"9","/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Components/Previewquestionbox/previewquestionbox.js":"10","/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Components/Qgenerationsetting/qgenerationsetting.js":"11","/Users/imhyeonseung/Desktop/GIT/authorPlatformClient/src/index.js":"12","/Users/imhyeonseung/Desktop/GIT/authorPlatformClient/src/App.js":"13","/Users/imhyeonseung/Desktop/GIT/authorPlatformClient/src/reportWebVitals.js":"14","/Users/imhyeonseung/Desktop/GIT/authorPlatformClient/src/Pages/PreviewPage.js":"15","/Users/imhyeonseung/Desktop/GIT/authorPlatformClient/src/Pages/MainPage.js":"16","/Users/imhyeonseung/Desktop/GIT/authorPlatformClient/src/Pages/LoginPage.js":"17","/Users/imhyeonseung/Desktop/GIT/authorPlatformClient/src/Components/Previewquestionbox/previewquestionbox.js":"18","/Users/imhyeonseung/Desktop/GIT/authorPlatformClient/src/Components/Questionbox/questionbox.js":"19","/Users/imhyeonseung/Desktop/GIT/authorPlatformClient/src/Components/Qgenerationsetting/qgenerationsetting.js":"20","/Users/imhyeonseung/Desktop/GIT/authorPlatformClient/src/Components/Topbar/topbar.js":"21","/Users/imhyeonseung/Desktop/GIT/authorPlatformClient/src/Components/Recommendquestion/recommendquestion.js":"22"},{"size":535,"mtime":1687226265281,"results":"23","hashOfConfig":"24"},{"size":625,"mtime":1688351673279,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1687226265281,"results":"26","hashOfConfig":"24"},{"size":16770,"mtime":1691550253069,"results":"27","hashOfConfig":"24"},{"size":2098,"mtime":1691547192662,"results":"28","hashOfConfig":"24"},{"size":413,"mtime":1687926234608,"results":"29","hashOfConfig":"24"},{"size":9212,"mtime":1689070289818,"results":"30","hashOfConfig":"24"},{"size":2259,"mtime":1689056485753,"results":"31","hashOfConfig":"24"},{"size":1516,"mtime":1688535886725,"results":"32","hashOfConfig":"24"},{"size":1151,"mtime":1688541632218,"results":"33","hashOfConfig":"24"},{"size":1420,"mtime":1691559998961,"results":"34","hashOfConfig":"24"},{"size":535,"mtime":1687226265281,"results":"35","hashOfConfig":"36"},{"size":625,"mtime":1688351673279,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1687226265281,"results":"38","hashOfConfig":"36"},{"size":1516,"mtime":1688535886725,"results":"39","hashOfConfig":"36"},{"size":16770,"mtime":1691550253069,"results":"40","hashOfConfig":"36"},{"size":2098,"mtime":1691547192662,"results":"41","hashOfConfig":"36"},{"size":1151,"mtime":1688541632218,"results":"42","hashOfConfig":"36"},{"size":9212,"mtime":1689070289818,"results":"43","hashOfConfig":"36"},{"size":1420,"mtime":1691559998961,"results":"44","hashOfConfig":"36"},{"size":413,"mtime":1687926234608,"results":"45","hashOfConfig":"36"},{"size":2259,"mtime":1689056485753,"results":"46","hashOfConfig":"36"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n6o79z",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ngfwg",{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/index.js",[],[],"/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/App.js",[],[],"/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/reportWebVitals.js",[],[],"/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Pages/MainPage.js",["114","115"],[],"/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Pages/LoginPage.js",[],[],"/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Components/Topbar/topbar.js",[],[],"/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Components/Questionbox/questionbox.js",["116"],[],"import React, { useState, useRef, useEffect} from 'react'\nimport './questionbox.css'\nimport TextareaAutosize from 'react-autosize-textarea';\nimport ToggleButton from 'react-toggle-button';\nimport axios from 'axios';\n\nexport const Questionbox = (props) => {\n    const [isEdit, setIsEdit] = useState(false);\n    const [isPublic, setIsPublic] = useState(false);\n    const [isFoucs, setIsFocus] = useState(false);\n\n    // variables about follow-up questions  \n    const [followUpQuestions, setfollowUpQuestions] = useState(\"empty\");\n    const [isFollowUp, setIsFollowUp] = useState(false);\n    const [followClicked, setFollowClicked] = useState(false);\n    const [followQuestion, setFollowQuestion] = useState(\"\");\n\n    const [currentQuestion, setCurrentQuestion] = useState(\"\");\n\n    // variables about answers \n    const [prevAnswer, setPrevAnswer] = useState(\"\");\n    const [currentAnswer, setCurrentAnswer] = useState(\"\");\n\n    // check is regenerate\n    const [isRegenerate, setIsRegenerate] = useState(false);\n\n    const textAreaRef = useRef(null);\n\n    useEffect(() => {\n        setCurrentQuestion(props.question);\n        setPrevAnswer(props.answer);\n        setCurrentAnswer(props.answer);\n        setIsPublic(props.isPublic);\n    }, [])\n\n    async function addFollowUpQuestion (prevQuestion, prevAnswer) {\n        if(!isFollowUp) {\n            setIsFollowUp(true);\n            axios({\n                method: \"POST\",\n                url: \"https://qna-restapi-dxpyj.run.goorm.site/getFUQuestion\",\n                data: {\n                    title: props.title,\n                    abstract: props.abstract,\n                    question: prevQuestion,\n                    answer: prevAnswer\n                },\n                headers: {'Content-Type': 'application/json'}\n            })\n            .then ((response) => {\n                const res = response.data;\n                setfollowUpQuestions(JSON.parse((res)));\n                setIsFollowUp(false);\n            })\n            .catch(error =>{\n                console.log(\"error\");\n                setIsFollowUp(false);\n            })\n        }\n    }\n\n\n    useEffect(() => {\n        if(textAreaRef.current) {\n            textAreaRef.current.dispatchEvent(new Event('input', { bubbles: true }));\n        }\n    }, [currentAnswer]);\n\n    // useEffect(()=> {\n    //     setIsWaitAnswer(props.isWaitAnswer);\n    //     if(props.isWaitAnswer === false) {\n    //         cancelAnswer();\n    //     }\n    // }, [props.isWaitAnswer]);\n\n    const currentAnswerHandler = (e) => {\n        e.preventDefault();\n        setCurrentAnswer(e.target.value);\n    }\n\n    function changeIsEdit() {\n        setCurrentAnswer(props.answer);\n        setIsEdit(true);\n        if(textAreaRef.current) {\n            textAreaRef.current.focus();\n        }\n    }\n\n    function cancelAnswer() {\n        setCurrentAnswer(prevAnswer);\n        setIsEdit(false);\n    }\n\n    function changeAnswer() {\n        props.updateAnswer(currentAnswer);\n        setPrevAnswer(currentAnswer);\n        setIsEdit(false);\n    }\n\n    function changePublic(isPublic) {\n        props.updatePublic(!isPublic);\n        setIsPublic(!isPublic);\n    }\n\n    function requestfollowUp() {\n        if (!isFollowUp) {\n            setfollowUpQuestions(\"empty\");\n            addFollowUpQuestion(currentQuestion, currentAnswer);\n        }\n    }\n\n    async function regenerateAnswer () {\n        setCurrentAnswer(\"Regenerate Answer...\");\n        setIsRegenerate(true);\n        setIsEdit(false);\n        await props.regenerateAnswer(currentQuestion);\n        setPrevAnswer(props.answer);\n        setCurrentAnswer(props.answer);\n        setIsRegenerate(false);\n    }\n\n    const handleFocus = () => {\n        setIsFocus(true);\n    };\n    \n    const handleBlur = () => {\n        setIsFocus(false);\n    };\n\n    const requestFollowUpQuestion = async (question) => {\n        setFollowQuestion(question);\n        setFollowClicked(true);\n        await props.addFollowUpAnswer(question, props.myIndex);\n        setFollowClicked(false);\n        setfollowUpQuestions(\"empty\");\n    }\n\n    return(\n        <div key={props.myIndex} tabIndex=\"0\" onFocus={handleFocus} onBlur={handleBlur}>\n            <div className='questionbox'>\n                <div className='contatiner'>\n                    <div className='questionbar'>\n                        <div className='question'>\n                            {currentQuestion}\n                        </div>\n                        <div className='buttons'>\n                            <div className='makepublic'>\n                                make public\n                            </div>\n                            <ToggleButton\n                                className='toggleBtn'\n                                inactiveLabel={''}\n                                activeLabel={''}\n                                colors={{\n                                    activeThumb: {\n                                        base: 'rgb(164,44,37)'\n                                    },\n                                    inactiveThumb: {\n                                        base: 'rgb(190,154,152)'\n                                    },\n                                    active: {\n                                        base: 'rgb(234,209,207)',\n                                        hover: 'rgb(242,217,215)'\n                                    },\n                                    inactive: {\n                                        base: 'rgb(234,209,207)',\n                                        hover: 'rgb(242,217,215)'\n                                    }\n                                }}\n                                containerStyle={{width:'42px'}}\n                                trackStyle={{width:'42px'}}\n                                thumbAnimateRange={[0, 24]}\n                                value={ isPublic }\n                                onToggle={(value) => {\n                                    changePublic(value);\n                                }} \n                                />\n                            <img src=\"images/trash.png\" alt={'delete button'} className='deleteBtn' onClick={props.deleteQuestion}/>\n                        </div>\n                    </div>\n                    <div className='answerbox'>\n                        <div className='answer'>\n                            {isEdit ? <TextareaAutosize className='editAnswer' ref={textAreaRef} value={currentAnswer} onChange={currentAnswerHandler} onResize={(e) => {}}/> : <div>{currentAnswer}</div>}\n                        </div>\n                        \n                        { isRegenerate ?\n                            null\n                            :\n                            <div className='buttonContainer'>\n                                {isEdit ? <div className='editBtns'><button className='cancelBtn' onClick={cancelAnswer}>cancel</button> <button className='completeBtn' onClick={changeAnswer}>complete</button></div> : <button onClick={changeIsEdit}>Edit the Answer</button>}\n                            </div>            \n                        }\n                    </div>\n                    { isRegenerate ?\n                        null\n                        :\n                        <div className='advanceBtns'>\n                            <button onClick={regenerateAnswer} className='redoBtn'><img src=\"images/redo.svg\" alt={'redo button'}/> Regenerate <b>Answer</b></button>\n                            <button onClick={requestfollowUp}>Recommend <b>Follow-up Question</b></button>\n                        </div>\n                    }\n                </div>\n                {isRegenerate?\n                    null\n                    :\n                    <img key={props.id} tabIndex=\"0\" className='handle' src=\"images/handle.svg\" alt=\"handle\" {...props.handle} onMouseDown={handleBlur} onMouseUp={handleFocus}/>       \n                }\n            </div>\n                <div className='followUpQuestionContainer'>\n                    {followClicked ? \n                        <div className='tempoQuestionbox'>\n                            <div className='questionbar'>{followQuestion}</div>\n                            <div className='answerbox'>Answer is being generated...</div>\n                        </div>\n                        :\n                        (isFoucs ?\n                            ( followUpQuestions !== \"empty\" ?\n                                (followUpQuestions.map((question, index) => (<div key={index} className='followUpQuestion' onClick={() => requestFollowUpQuestion(question)}>{question}</div>)))\n                                :\n                                (isFollowUp ?\n                                    <div className='loadingHolder'>\n                                        <img className='loading' src=\"images/loading.gif\" alt=\"loading\" />\n                                    </div>\n                                    :\n                                    null\n                                )\n                            )\n                            :\n                            null\n                        )\n                    }\n                </div> \n        </div>\n    )\n}","/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Components/Recommendquestion/recommendquestion.js",["117"],[],"/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Pages/PreviewPage.js",["118"],[],"/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Components/Previewquestionbox/previewquestionbox.js",["119","120"],[],"/Users/imhyeonseung/Desktop/GIT/QAplatform/client/src/Components/Qgenerationsetting/qgenerationsetting.js",["121","122"],[],"/Users/imhyeonseung/Desktop/GIT/authorPlatformClient/src/index.js",[],[],"/Users/imhyeonseung/Desktop/GIT/authorPlatformClient/src/App.js",[],[],"/Users/imhyeonseung/Desktop/GIT/authorPlatformClient/src/reportWebVitals.js",[],[],"/Users/imhyeonseung/Desktop/GIT/authorPlatformClient/src/Pages/PreviewPage.js",["123"],[],"/Users/imhyeonseung/Desktop/GIT/authorPlatformClient/src/Pages/MainPage.js",["124","125"],[],"/Users/imhyeonseung/Desktop/GIT/authorPlatformClient/src/Pages/LoginPage.js",[],[],"/Users/imhyeonseung/Desktop/GIT/authorPlatformClient/src/Components/Previewquestionbox/previewquestionbox.js",["126","127"],[],"/Users/imhyeonseung/Desktop/GIT/authorPlatformClient/src/Components/Questionbox/questionbox.js",["128"],[],"/Users/imhyeonseung/Desktop/GIT/authorPlatformClient/src/Components/Qgenerationsetting/qgenerationsetting.js",["129","130"],[],"/Users/imhyeonseung/Desktop/GIT/authorPlatformClient/src/Components/Topbar/topbar.js",[],[],"/Users/imhyeonseung/Desktop/GIT/authorPlatformClient/src/Components/Recommendquestion/recommendquestion.js",["131"],[],{"ruleId":"132","severity":1,"message":"133","line":96,"column":8,"nodeType":"134","endLine":96,"endColumn":10,"suggestions":"135"},{"ruleId":"132","severity":1,"message":"136","line":114,"column":8,"nodeType":"134","endLine":114,"endColumn":14,"suggestions":"137"},{"ruleId":"132","severity":1,"message":"138","line":34,"column":8,"nodeType":"134","endLine":34,"endColumn":10,"suggestions":"139"},{"ruleId":"132","severity":1,"message":"140","line":17,"column":8,"nodeType":"134","endLine":17,"endColumn":10,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":12,"column":18,"nodeType":"144","messageId":"145","endLine":12,"endColumn":26},{"ruleId":"146","severity":1,"message":"147","line":22,"column":29,"nodeType":"148","endLine":22,"endColumn":57},{"ruleId":"146","severity":1,"message":"147","line":24,"column":29,"nodeType":"148","endLine":24,"endColumn":55},{"ruleId":"142","severity":1,"message":"149","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":33},{"ruleId":"132","severity":1,"message":"150","line":13,"column":8,"nodeType":"134","endLine":13,"endColumn":10,"suggestions":"151"},{"ruleId":"142","severity":1,"message":"143","line":12,"column":18,"nodeType":"144","messageId":"145","endLine":12,"endColumn":26},{"ruleId":"132","severity":1,"message":"133","line":96,"column":8,"nodeType":"134","endLine":96,"endColumn":10,"suggestions":"152"},{"ruleId":"132","severity":1,"message":"136","line":114,"column":8,"nodeType":"134","endLine":114,"endColumn":14,"suggestions":"153"},{"ruleId":"146","severity":1,"message":"147","line":22,"column":29,"nodeType":"148","endLine":22,"endColumn":57},{"ruleId":"146","severity":1,"message":"147","line":24,"column":29,"nodeType":"148","endLine":24,"endColumn":55},{"ruleId":"132","severity":1,"message":"138","line":34,"column":8,"nodeType":"134","endLine":34,"endColumn":10,"suggestions":"154"},{"ruleId":"142","severity":1,"message":"149","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":33},{"ruleId":"132","severity":1,"message":"150","line":13,"column":8,"nodeType":"134","endLine":13,"endColumn":10,"suggestions":"155"},{"ruleId":"132","severity":1,"message":"140","line":17,"column":8,"nodeType":"134","endLine":17,"endColumn":10,"suggestions":"156"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'title', 'url', and 'userScholarID'. Either include them or remove the dependency array.","ArrayExpression",["157"],"React Hook useEffect has missing dependencies: 'title' and 'username'. Either include them or remove the dependency array.",["158"],"React Hook useEffect has missing dependencies: 'props.answer', 'props.isPublic', and 'props.question'. Either include them or remove the dependency array. If 'setCurrentQuestion' needs the current value of 'props.question', you can also switch to useReducer instead of useState and read 'props.question' in the reducer.",["159"],"React Hook useEffect has a missing dependency: 'props.question'. Either include it or remove the dependency array. If 'setPrevQuestion' needs the current value of 'props.question', you can also switch to useReducer instead of useState and read 'props.question' in the reducer.",["160"],"no-unused-vars","'username' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'props.viewerprompt'. Either include it or remove the dependency array. If 'setPrevPrompt' needs the current value of 'props.viewerprompt', you can also switch to useReducer instead of useState and read 'props.viewerprompt' in the reducer.",["161"],["162"],["163"],["164"],["165"],["166"],{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"167","fix":"177"},{"desc":"169","fix":"178"},{"desc":"171","fix":"179"},{"desc":"175","fix":"180"},{"desc":"173","fix":"181"},"Update the dependencies array to be: [title, url, userScholarID]",{"range":"182","text":"183"},"Update the dependencies array to be: [QnAs, title, username]",{"range":"184","text":"185"},"Update the dependencies array to be: [props.answer, props.isPublic, props.question]",{"range":"186","text":"187"},"Update the dependencies array to be: [props.question]",{"range":"188","text":"189"},"Update the dependencies array to be: [props.viewerprompt]",{"range":"190","text":"191"},{"range":"192","text":"183"},{"range":"193","text":"185"},{"range":"194","text":"187"},{"range":"195","text":"191"},{"range":"196","text":"189"},[3751,3753],"[title, url, userScholarID]",[4224,4230],"[QnAs, title, username]",[1239,1241],"[props.answer, props.isPublic, props.question]",[521,523],"[props.question]",[375,377],"[props.viewerprompt]",[3751,3753],[4224,4230],[1239,1241],[375,377],[521,523]]